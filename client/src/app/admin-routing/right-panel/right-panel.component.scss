@property --part-count {
  syntax: "<integer>";
  inherits: false;
  initial-value: 0;
}

:host ::ng-deep {
  .mat-mdc-standard-chip {
    .mdc-evolution-chip__cell--primary,
    .mdc-evolution-chip__action--primary,
    .mat-mdc-chip-action-label {
      overflow: hidden;
    }
  }

  .mat-mdc-form-field-subscript-wrapper {
    display: none;
  }

  .team-members {
    .mat-mdc-standard-chip {
      .mdc-evolution-chip__cell--primary,
      .mdc-evolution-chip__action--primary,
      .mat-mdc-chip-action-label {
        width: 100%;
      }
    }

    .mdc-evolution-chip-set__chips {
      flex-flow: column;
      max-width: 100%;
    }

    .mat-mdc-form-field-infix {
      width: auto;
    }
  }
}

#largestCount {
  position: fixed;
  visibility: hidden;
}

#sticky-section {
  display: flex;
  flex-direction: column;

  gap: var(--gap-size);

  background-color: var(--mat-sys-surface);
  z-index: 1;

  padding: calc(var(--gap-size) / 2) var(--gap-size);

  .buttons-container {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;

    #download-button-text-container {
      display: flex;

      #download-button-text-sizer {
        visibility: hidden;
        position: fixed;
      }

      #download-button-text {
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: start;

        transition: width var(--transition-duration);
      }
    }
  }
}

#bin-config-scroller {
  display: flex;
  flex-direction: column;

  overflow: hidden auto;

  scrollbar-gutter: stable;
  scrollbar-width: thin;

  padding-left: var(--gap-size);

  .bin-config-container {
    display: flex;
    flex-direction: column;

    gap: var(--gap-size);
    padding: calc(var(--gap-size) / 2) 0px;
  }
}

#sticky-section,
#bin-config-scroller {
  mat-form-field {
    max-width: 300px;

    mat-chip-row {
      flex-grow: 1;
    }

    mat-chip-option {
      .bin-data-row {
        display: flex;
        flex-direction: row;
        width: 100%;
      }

      mat-divider {
        margin: 0px calc(var(--gap-size) / 2);
      }

      .bin-name {
        overflow: hidden;
        text-overflow: ellipsis;
        flex: 1 1 0px;
      }

      .bin-part-count {
        text-align: right;

        transition: width var(--transition-duration),
          --part-count var(--transition-duration);
        counter-set: part-count var(--part-count);
      }

      .bin-part-count::after {
        content: counter(part-count);
      }
    }

    input,
    button {
      transition: opacity var(--transition-duration),
        max-height var(--transition-duration), width var(--transition-duration);
    }

    input {
      display: block;

      max-height: calc-size(fit-content, size);
    }

    input:disabled,
    button:disabled {
      opacity: 50%;
    }

    input:disabled {
      max-height: 0px;
    }

    button:disabled {
      width: 0px;
    }
  }
}
